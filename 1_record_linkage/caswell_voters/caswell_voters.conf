dblink : {

    // Define distortion hyperparameters (to be referenced below)
    lowDistortion : {alpha : 10.0, beta : 1000.0}
    highDistortion: {alpha: 1.0, beta: 99.0}

    // Define similarity functions (to be referenced below)
    constSimFn : {
        name : "ConstantSimilarityFn",
    }

    levSimFn : {
        name : "LevenshteinSimilarityFn",
        parameters : {
            threshold : 7.0
            maxSimilarity : 10.0
        }
    }

    data : {
        // Path to data files. Must have header row (column names).
        path : "/projects/akaplan@colostate.edu/downstream-task/code/record_linkage/dblink/caswell_voters/caswell_voters.csv"

        // Specify columns that contain identifiers
        recordIdentifier : "rec_id",
        fileIdentifier : "db_id", // not needed since this data set is only a single file
        entityIdentifier : "ncid" // optional

        // String representation of a missing value
        nullValue : "NA"

        // Specify properties of the attributes (columns) used for matching
        matchingAttributes : [
            {name : "sex_code", similarityFunction : ${dblink.constSimFn}, distortionPrior : ${dblink.lowDistortion}},
            {name : "race_code", similarityFunction : ${dblink.constSimFn}, distortionPrior : ${dblink.lowDistortion}},
            {name : "first_name", similarityFunction : ${dblink.levSimFn}, distortionPrior : ${dblink.lowDistortion}},
            {name : "last_name", similarityFunction : ${dblink.levSimFn}, distortionPrior : ${dblink.lowDistortion}}
        ]
    }
    

    randomSeed : 319158
    expectedMaxClusterSize : 20 // 5 databases, with many dups within
    populationSize : 54716 // nrow(caswell_voters)
    
    // Specify partitioner
    partitioner : {
        name : "KDTreePartitioner",
        parameters : {
            numLevels : 3, // a value of zero means no partitioning
            matchingAttributes : ["last_name", "sex_code"] // cycle through matching attributes in this order when constructing the tree
        }
    }

    // Path to Markov chain and full state (for resuming MCMC)
    outputPath : "/projects/akaplan@colostate.edu/downstream-task/code/record_linkage/dblink/caswell_voters/caswell_voters_results/"

    // Path to save Spark checkpoints
    checkpointPath : "/scratch/summit/akaplan@colostate.edu/tmp/spark_checkpoint/"
    
    // Steps to be performed (in order)
    steps : [
        {name : "sample", parameters : {
            sampleSize : 9000,
            burninInterval : 60000, // paper says slow convergence
            thinningInterval : 10, // match paper ncvoter
            resume : true,
            sampler : "PCG-I"
        }},
        {name : "summarize", parameters : {
            lowerIterationCutoff : 0,
            quantities : ["cluster-size-distribution", "partition-sizes"]
        }},
        {name : "evaluate", parameters : {
            lowerIterationCutoff : 1,
            metrics : ["pairwise", "cluster"], 
            useExistingSMPC : false
        }}
    ]
}
